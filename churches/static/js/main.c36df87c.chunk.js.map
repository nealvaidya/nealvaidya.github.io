{"version":3,"sources":["Assets/cross.svg","Assets/activecross.svg","GrommetTheme.js","Components/MarkerList/MarkerList.jsx","Components/SearchBar/SearchBar.jsx","Components/SearchBox/SearchBox.jsx","Components/SearchResults/SearchResults.jsx","Components/InfoBox/InfoBox.jsx","Components/app/App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","theme","global","font","family","size","height","control","border","radius","breakpoints","small","value","medium","large","shadowImage","require","crossImage","activeCrossImage","CustomIcon","L","Icon","extend","options","iconSize","iconAnchor","shadowUrl","shadowSize","shadowAnchor","tooltipAnchor","popupAnchor","crossIcon","iconUrl","iconRetinaUrl","className","activeCrossIcon","MarkerList","props","data","target","setTarget","setActive","items","filter","church","billinglatitude","billinglongitude","map","react_default","a","createElement","Marker","key","id","icon","position","onClick","title","name","concat","zIndexOffset","Tooltip","direction","Popup","onClose","SearchBar","focus","_React$useState","React","useState","_React$useState2","Object","slicedToArray","searchValue","setSearchValue","allChurchNames","sort","regexp","RegExp","replace","suggestions","match","push","selectedChurch","find","console","log","Box","fill","align","Keyboard","onEnter","length","matches","c","toLowerCase","TextInput","placeholder","plain","dropHeight","dropAlign","top","right","left","onChange","event","onSelect","suggestion","onFocus","onBlur","FormClose","SearchBox","screenSize","isSearchBoxFocused","setSearchBoxFocused","background","side","color","elevation","gap","pad","horizontal","margin","round","style","width","Search","SearchBar_SearchBar","SearchResults","Fragment","InfoBox","dataSource","active","_useState","_useState2","churchData","setChurchData","useEffect","fetch","method","mode","then","response","json","responseJson","catch","error","alert","Layer","modal","onClickOutside","Grid","rows","columns","areas","start","end","justifyContent","gridArea","Heading","alignSelf","textAlign","truncate","maxWidth","billingstreet","Button","label","Default","prototype","_getIconUrl","mergeOptions","cartoDBVoyagerTiles","cartoDBVoyagerAttr","iconAttr","local","App","s","center","setCenter","_useState3","_useState4","zoom","_useState5","_useState6","setData","_useState7","_useState8","_useState9","_useState10","infoBoxActive","setInfoBoxActive","localData","message","targetChurch","Stack","anchor","Map","zoomControl","zIndex","ZoomControl","TileLayer","url","attribution","Components_MarkerList_MarkerList","SearchBox_SearchBox","InfoBox_InfoBox","SearchResults_SearchResults","Boolean","window","location","hostname","ReactDOM","render","Grommet","ResponsiveContext","Consumer","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c36df87c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.d7df4b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/activecross.416f28be.svg\";","const theme = {\r\n  global: {\r\n    font: {\r\n      family: 'Arial',\r\n      size: '14px',\r\n      height: '20px',\r\n    },\r\n    control: {\r\n      border: {\r\n        radius: '4px',\r\n      },\r\n    },\r\n    breakpoints: {\r\n      small: { value: 768 },\r\n      medium: { value: 1536 },\r\n      large: { value: 1537 },\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { Marker, Popup, Tooltip } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport './MarkerList.css';\r\n\r\nconst shadowImage = require('leaflet/dist/images/marker-shadow.png');\r\nconst crossImage = require('../../Assets/cross.svg');\r\nconst activeCrossImage = require('../../Assets/activecross.svg');\r\n\r\nconst CustomIcon = L.Icon.extend({\r\n  options: {\r\n    iconSize: [30, 30],\r\n    iconAnchor: [15, 30],\r\n    shadowUrl: shadowImage,\r\n    shadowSize: [30, 30],\r\n    shadowAnchor: [8, 30],\r\n    tooltipAnchor: [1, -30],\r\n    popupAnchor: [0, -30],\r\n  },\r\n});\r\n\r\nconst crossIcon = new CustomIcon({\r\n  iconUrl: crossImage,\r\n  iconRetinaUrl: crossImage,\r\n  className: 'cross',\r\n});\r\n\r\nconst activeCrossIcon = new CustomIcon({\r\n  iconUrl: activeCrossImage,\r\n  iconRetinaUrl: activeCrossImage,\r\n  className: 'active cross',\r\n  iconSize: [40, 40],\r\n});\r\n\r\nfunction MarkerList(props) {\r\n  const {\r\n    data, target, setTarget, setActive,\r\n  } = props;\r\n\r\n  // const [active, setActive] = useState(false);\r\n  // const [activeKey, setActiveKey] = useState('');\r\n\r\n\r\n  const filteredChurches = data.filter(church => church.billinglatitude && church.billinglongitude);\r\n  const items = filteredChurches.map(church => (\r\n    <Marker\r\n      key={church.id}\r\n      icon={church.id === target ? activeCrossIcon : crossIcon}\r\n      position={[church.billinglatitude, church.billinglongitude]}\r\n      onClick={() => {\r\n        setTarget(church.id);\r\n        setActive(true);\r\n      }}\r\n      title={church.name}\r\n      className={`${church.id}`}\r\n      zIndexOffset={church.id === target ? 1000 : 0}\r\n    >\r\n      <Tooltip direction=\"top\">{church.name}</Tooltip>\r\n      <Popup onClose={() => setTarget(0)}>{church.name}</Popup>\r\n    </Marker>\r\n  ));\r\n\r\n  return (\r\n    <div id=\"MarkerList\">\r\n      {items}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MarkerList;\r\n","import React from 'react';\r\nimport { Box, Keyboard, TextInput } from 'grommet';\r\nimport { FormClose } from 'grommet-icons';\r\n\r\nfunction escape(s) {\r\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\n\r\nfunction SearchBar(props) {\r\n  const {\r\n    data, focus, target, setTarget,\r\n  } = props;\r\n\r\n  const [searchValue, setSearchValue] = React.useState('');\r\n\r\n  const allChurchNames = data.map(church => church.name).sort();\r\n\r\n  const regexp = new RegExp(escape(searchValue), 'i');\r\n  const suggestions = (allChurchNames.filter(name => name.match(regexp)));\r\n\r\n  function onEnter() {\r\n    if (searchValue) {\r\n      if (suggestions.length === 1) {\r\n        push(suggestions[0]);\r\n      }\r\n    } else {\r\n      const matches = allChurchNames.filter(\r\n        c => c.toLowerCase() === searchValue.toLowerCase(),\r\n      );\r\n      if (matches.length === 1) {\r\n        push(matches[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function push(value) {\r\n    const selectedChurch = data.find(church => church.name === value);\r\n    console.log(selectedChurch.id);\r\n    setTarget(selectedChurch.id);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      fill=\"horizontal\"\r\n      direction=\"row\"\r\n      align=\"center\"\r\n    >\r\n      <Keyboard\r\n        onEnter={() => { onEnter(); }}\r\n      >\r\n        <TextInput\r\n          placeholder=\"Search Churches\"\r\n          plain\r\n          dropHeight=\"medium\"\r\n          dropAlign={{\r\n            top: 'bottom',\r\n            right: 'right',\r\n            left: 'left',\r\n          }}\r\n          value={searchValue}\r\n          onChange={event => setSearchValue(event.target.value)}\r\n          onSelect={(event) => {\r\n            setSearchValue(event.suggestion);\r\n            push(event.suggestion);\r\n          }}\r\n          suggestions={suggestions}\r\n          onFocus={() => focus(true)}\r\n          onBlur={() => focus(false)}\r\n        />\r\n      </Keyboard>\r\n      {searchValue.length > 0 && (\r\n        <FormClose\r\n          onClick={() => setSearchValue('')}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n} from 'grommet';\r\nimport { Search as SearchIcon } from 'grommet-icons';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\n\r\nfunction SearchBox(props) {\r\n  const {\r\n    data, size, target, setTarget,\r\n  } = props;\r\n  const [isSearchBoxFocused, setSearchBoxFocused] = React.useState(false);\r\n\r\n\r\n  function boxWidth(screenSize) {\r\n    if (screenSize === 'small') {\r\n      return ('90vw');\r\n    }\r\n    return ('50vw');\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      direction=\"row\"\r\n      align=\"center\"\r\n      background=\"white\"\r\n      border={{ side: 'all', color: isSearchBoxFocused ? 'green' : 'red' }}\r\n      elevation=\"small\"\r\n      fill=\"horizontal\"\r\n      gap=\"small\"\r\n      pad={{\r\n        horizontal: 'small',\r\n      }}\r\n      margin=\"medium\"\r\n      round=\"medium\"\r\n      style={{ width: boxWidth(size) }}\r\n    >\r\n      <SearchIcon />\r\n      <SearchBar data={data} focus={setSearchBoxFocused} target={target} setTarget={setTarget} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { Layer } from 'grommet';\r\n\r\nfunction SearchResults() {\r\n  return (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box, Grid, Layer, Button, Heading,\r\n} from 'grommet';\r\n\r\nfunction InfoBox(props) {\r\n  const {\r\n    dataSource, active, setActive, target,\r\n  } = props;\r\n\r\n  const [churchData, setChurchData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${dataSource}/church/${target}`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n    })\r\n      .then(response => response.json())\r\n      .then(responseJson => setChurchData(responseJson))\r\n      .then(console.log('Requested Data'))\r\n      .catch((error) => {\r\n        alert(`Couldn't access data for ${target}`);\r\n      });\r\n  }, [dataSource, target, active]);\r\n\r\n  return (\r\n    <Layer\r\n      modal\r\n      onClickOutside={() => setActive(false)}\r\n    >\r\n      <Grid\r\n        rows={['xsmall', 'medium', 'xxsmall']}\r\n        columns={['medium', 'medium']}\r\n        gap=\"small\"\r\n        areas={[\r\n          { name: 'header', start: [0, 0], end: [1, 0] },\r\n          { name: 'col1', start: [0, 1], end: [0, 1] },\r\n          { name: 'col2', start: [1, 1], end: [1, 1] },\r\n          { name: 'footer', start: [0, 2], end: [1, 2] },\r\n        ]}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Box gridArea=\"header\" background=\"red\">\r\n          <Heading\r\n            margin=\"none\"\r\n            alignSelf=\"center\"\r\n            textAlign=\"center\"\r\n            truncate\r\n            gridArea=\"header\"\r\n            size=\"small\"\r\n            maxWidth=\"medium\"\r\n          >\r\n            {churchData.name}\r\n\r\n          </Heading>\r\n        </Box>\r\n        <Box gridArea=\"col1\" background=\"purple\">{churchData.billingstreet}</Box>\r\n        <Box gridArea=\"col2\" background=\"purple\">{churchData.name}</Box>\r\n        <Box gridArea=\"footer\" background=\"blue\">\r\n          <Button\r\n            onClick={() => setActive(false)}\r\n            label=\"Dismiss\"\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Layer>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","/* eslint-disable global-require */\n\nimport React, { useState, useEffect } from 'react';\nimport { Map, TileLayer, ZoomControl } from 'react-leaflet';\nimport { Stack } from 'grommet';\nimport L from 'leaflet';\n\nimport 'leaflet/dist/leaflet.css';\nimport MarkerList from '../MarkerList/MarkerList';\nimport SearchBox from '../SearchBox/SearchBox';\nimport SearchResults from '../SearchResults/SearchResults';\nimport InfoBox from '../InfoBox/InfoBox';\n\nimport localData from '../../Assets/data.json'; // sample data for local testing\n// ----------------------------------------------------------------------------\n// fix for marker not appearing\n// https://github.com/PaulLeCam/react-leaflet/issues/453#issuecomment-410450387\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n// ----------------------------------------------------------------------------\n\nconst cartoDBVoyagerTiles = 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png';\nconst cartoDBVoyagerAttr = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>';\nconst iconAttr = 'Icons made by <a href=\"https://www.freepik.com/\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"/>Flaticon</a> | ';\n\nconst local = true;\nconst dataSource = 'https://church-map.herokuapp.com';\n\nfunction App(props) {\n  const { size } = props;\n  // Defaults to center of Durham\n  const [center, setCenter] = useState([35.9940, -78.8986]);\n  const [zoom, setZoom] = useState(13);\n  const [data, setData] = useState([]);\n  const [target, setTarget] = useState(0);\n  const [infoBoxActive, setInfoBoxActive] = useState(false);\n\n  useEffect(() => {\n    if (local) {\n      setData(localData);\n    } else {\n      fetch(`${dataSource}/all`, {\n        method: 'GET',\n        mode: 'cors',\n      })\n        .then(response => response.json())\n        .then(responseJson => setData(responseJson))\n        .then(console.log('Requested Data'))\n        .catch((error) => {\n          alert(\"Couldn't access church data: \", error.message);\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (target) {\n      const targetChurch = data.find(church => church.id === target);\n      setCenter([targetChurch.billinglatitude, targetChurch.billinglongitude]);\n    }\n  }, [data, target]);\n\n  function stackAnchor(s) {\n    if (s === 'small') {\n      return ('top');\n    }\n    return ('top-left');\n  }\n\n  return (\n    <>\n      <Stack anchor={stackAnchor(size)}>\n        <Map\n          center={center}\n          zoom={zoom}\n          zoomControl={false}\n          style={{ zIndex: 0 }}\n          onClick={() => setTarget(0)}\n        >\n          <ZoomControl position=\"bottomright\" />\n          <TileLayer\n            url={cartoDBVoyagerTiles}\n            attribution={iconAttr + cartoDBVoyagerAttr}\n          />\n          <MarkerList\n            data={data}\n            target={target}\n            setTarget={setTarget}\n            setActive={setInfoBoxActive}\n          />\n        </Map>\n        <SearchBox\n          data={data}\n          size={size}\n          target={target}\n          setTarget={setTarget}\n        />\n      </Stack>\n      {infoBoxActive && (\n      <InfoBox\n        dataSource={dataSource}\n        active={infoBoxActive}\n        setActive={setInfoBoxActive}\n        target={target}\n      />\n      )}\n      <SearchResults />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Grommet, ResponsiveContext } from 'grommet';\nimport './index.css';\nimport theme from './GrommetTheme';\nimport App from './Components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Grommet theme={theme}>\n    <ResponsiveContext.Consumer>\n      {size => <App size={size} />}\n    </ResponsiveContext.Consumer>\n  </Grommet>,\n  document.getElementById('root'),\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}